// <auto-generated />
using System;
using Infrastructure_FiapTechChallenge;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure_FiapTechChallenge.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250207025724_CampoData")]
    partial class CampoData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.ConsultaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataMarcacaoConsulta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMedico")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdPaciente");

                    b.ToTable("tb_Consulta", (string)null);
                });

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.DiaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tb_Dia", (string)null);
                });

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.HistoricoConsultasEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataConsulta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdConsuta")
                        .HasColumnType("int");

                    b.Property<int>("IdHorarioDia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdConsuta")
                        .IsUnique();

                    b.HasIndex("IdHorarioDia")
                        .IsUnique();

                    b.ToTable("tb_HistoricoConsulta", (string)null);
                });

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.HorarioDiaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdDia")
                        .HasColumnType("int");

                    b.Property<int>("IdHorarioFim")
                        .HasColumnType("int");

                    b.Property<int>("IdHorarioInicio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDia");

                    b.ToTable("tb_HorarioDia", (string)null);
                });

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.HorarioEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Horario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tb_Horario", (string)null);
                });

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.MedicoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("tb_Medico", (string)null);
                });

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.PacienteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("tb_Paciente", (string)null);
                });

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.ConsultaEntity", b =>
                {
                    b.HasOne("Entity_TechChallengeFiap.Entities.MedicoEntity", "Medico")
                        .WithMany("Consultas")
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity_TechChallengeFiap.Entities.PacienteEntity", "Paciente")
                        .WithMany("Consultas")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.HistoricoConsultasEntity", b =>
                {
                    b.HasOne("Entity_TechChallengeFiap.Entities.ConsultaEntity", "Consulta")
                        .WithOne("HistoricoConsulta")
                        .HasForeignKey("Entity_TechChallengeFiap.Entities.HistoricoConsultasEntity", "IdConsuta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity_TechChallengeFiap.Entities.HorarioDiaEntity", "HorarioDia")
                        .WithOne("HistoricoConsulta")
                        .HasForeignKey("Entity_TechChallengeFiap.Entities.HistoricoConsultasEntity", "IdHorarioDia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consulta");

                    b.Navigation("HorarioDia");
                });

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.HorarioDiaEntity", b =>
                {
                    b.HasOne("Entity_TechChallengeFiap.Entities.DiaEntity", "Dia")
                        .WithMany("HorariosDias")
                        .HasForeignKey("IdDia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dia");
                });

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.ConsultaEntity", b =>
                {
                    b.Navigation("HistoricoConsulta");
                });

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.DiaEntity", b =>
                {
                    b.Navigation("HorariosDias");
                });

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.HorarioDiaEntity", b =>
                {
                    b.Navigation("HistoricoConsulta");
                });

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.MedicoEntity", b =>
                {
                    b.Navigation("Consultas");
                });

            modelBuilder.Entity("Entity_TechChallengeFiap.Entities.PacienteEntity", b =>
                {
                    b.Navigation("Consultas");
                });
#pragma warning restore 612, 618
        }
    }
}
